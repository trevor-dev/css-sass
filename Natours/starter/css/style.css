/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/*   Universal reset for all browsers:   */
* {
    margin: 0;
    padding: 0;
    /* gets rid of auto-margin and border */
    box-sizing: border-box;
}

body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7;
    color: #777777;
    padding: 30px;
}

.header {
    height: 95vh;
    background-image: linear-gradient(
        to bottom right,
        rgba(126, 213, 111, 0.8),
        rgba(40, 180, 131, 0.8)),
        url(../img/hero.jpg);
    /* fits to width of viewport */
    background-size: cover;
    background-position: top;
    position: relative;
    /*
    specify a polygon with specific coord
    in this case, starting at the origin
    (top left of image), moving clockwise
    ### Cool tool: Clippy Clip-Path maker
    https://bennettfeely.com/clippy/
    */
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

.logo-box {
    position: absolute;
    top: 40px;
    left: 40px;
}

.logo {
    height: 35px;
}

.text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    /* center text box */
    transform: translate(-50%, -50%);
    text-align: center;
}

.heading-primary {
    color: #ffffff;
    text-transform: uppercase;

    /* helps with animation. defines whether or not
    backface of an element should be visible when
    facing the user */
    backface-visibility: hidden;
    margin-bottom: 60px;
}

.heading-primary-main {
    display: block;
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 35px;

    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
}

.heading-primary-sub {
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 17.4px;

    animation-name: moveInRight;
    animation-duration: 1s;
    animation-timing-function: ease-out;
}

/* 
~~~~~~~~~~-   NOTE   -~~~~~~~~~~
Browsers are only optimized
for opacity and tranformation
*/
@keyframes moveInLeft {
    /* initial */
    0% {
        opacity: 0;
        transform: translateX(-100px);
    }
    /* middle */
    80% {
        transform: translateX(10px);
    }
    /* final */
    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(100px);
    }

    80% {
        transform: translateX(-10px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInBottom {
    0% {
        opacity: 0;
        transform: translateY(30px);
    }

    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

.btn:link,
.btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 15px 40px;
    display: inline-block;
    border-radius: 100px;
    /* shorthand for above transforms */
    transition: all .2s;
    position: relative;
    border: none;
    cursor: pointer;
}

.btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba(0,0,0,.2);
}

.btn:active {
    transform: translateY(-1px);
    box-shadow: 0 5px 10px rgba(0,0,0,.2);
}

.btn-white {
    background-color: #fff;
    color: #777;
}

/* create identical object 
with after pseudo-element*/
.btn::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 100px;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s;
}

.btn-white::after {
    background-color: #fff;

}/* increase size of button upon hover */
.btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
}

.btn-animated {
    animation: moveInBottom .5s ease-out .75s;
    animation-fill-mode: backwards;
}